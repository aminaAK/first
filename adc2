import RPi.GPIO as GPIO
import time

dac = [26, 19, 13, 6, 5, 11, 9, 10]
bits =len(dac)
levels =2**bits
maxVoltage=3.3
troykaModule = 17
comparator = 4

GPIO.setmode(GPIO.BCM)
GPIO.setup(dac, GPIO.OUT, initial =GPIO.LOW)
GPIO.setup(troykaModule,GPIO.OUT, initial = GPIO.HIGH)
GPIO.setup(comparator, GPIO.IN)

def decimal2binary(decimal):
    return [int(bit) for bit in bin(decimal)[2:].zfill(bits)]

def bin2dac(value):
    signal = decimal2binary(value)
    GPIO.output(dac, signal)  
    return signal

def abc(i, value):
     if i == -1:
          return value
     bin2dac(value + 2**i)
     time.sleep(0.001)
     compValue = GPIO.input(comparator)
     if compValue == 0:
         return abc(i-1, value)
     else:
         return abc(i-1, value + 2**i)
                   
                

try:
    while True:
        value = abc(bits-1, 0)
        voltage = maxVoltage / levels * value
        print("ADC value = {:^3}, input voltage ={:.2f}".format(value, voltage))
        
finally:
     GPIO.output(dac, GPIO.LOW)
     GPIO.cleanup(dac)
     print("GPIO cleanup comleted")
